This pattern involves a single class which is responsible to create an object while making sure 
that only single object gets created. This class provides a way to access its only object which 
can be accessed directly without instantiating the object of the class.

Implementation

We are going to create a SingleObject class which has its constructor as private and a static instance
 of itself. SingleObject class provides a static method to get its static instance to outside world. 
 SingletonPatternDemo, our demo class, will use SingleObject class to get a SingleObject object.